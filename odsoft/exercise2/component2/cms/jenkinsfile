pipeline {
    agent any

    stages {
        
    	stage('Checkout') {
            steps {
           		checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'AuthorInChangelog']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'a1e7ee23-40f2-46fe-82d5-048f0790e80e', url: 'https://rafael95@bitbucket.org/mei-isep/odsoft-18-19-ifp-g114.git']]])
            }
    	}
    
    	stage('Preparation') {
    	    steps {
                script {
                    if (isUnix()) {
                        dir('odsoft/exercise2/component2/cms') {sh './gradlew cleanTest cleanIntegrationTest cleanJacocoTestReport cleanJacocoIntegrationReport'}
                    } else {
                        dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat cleanTest cleanIntegrationTest cleanJacocoTestReport cleanJacocoIntegrationReport'}
                    }
                }
    	    }
        }
    
    	stage('Build') {
            steps {
                script{
                    if (isUnix()) {
                    	dir('odsoft/exercise2/component2/cms') {sh './gradlew build'}
                    } else {
                    	dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat build'}
                    }
                }
            }
    	}
    
        stage("Archive War, Generate/Publish Javadoc and Run Tests") {
            parallel {
                
                stage('Archive war file') {
                    steps {
                        archiveArtifacts allowEmptyArchive: true, artifacts: 'odsoft/exercise2/component2/cms/build/libs/*.war', fingerprint: true, onlyIfSuccessful: true
                    }
                }
    
                stage('Javadoc') {
                    steps {
                        script {
                            if (isUnix()) {
                                dir('odsoft/exercise2/component2/cms') {sh './gradlew javadoc'}
                            } else {
                                dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat javadoc'}
                            }
                        }
                
                        step([$class: 'JavadocArchiver', javadocDir: 'odsoft/exercise2/component2/cms/build/docs/javadoc', keepAll: false])
                    }
                }
    
                stage('Unit Tests') {
                    steps {
                        script {
                            if (isUnix()) {
                                dir('odsoft/exercise2/component2/cms') {sh './gradlew test'}
                            } else {
                                dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat test'}
                            }
                        }
                    }
                }
    
                stage('Integration Tests') {
                    steps {
                        script {
                            if (isUnix()) {
                                dir('odsoft/exercise2/component2/cms') {sh './gradlew integrationTest'}
                            } else {
                                dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat integrationTest'}
                            }
                        }
                    }

                }

                stage('Mutation Tests') {
                    steps {
                        /*
                        script {
                            if (isUnix()) {
                                dir('odsoft/exercise2/component2/cms') {sh './gradlew mutationTest'}
                            } else {
                                dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat mutationTest'}
                            }
                        }
                        */
                        
                        echo "mutation tests under construction"
                    }
                }
            
                stage('System Tests') {
                    steps {
                        /*
                        script {
                            if (isUnix()) {
                                dir('odsoft/exercise2/component2/cms') {sh './gradlew systemTest'}
                            } else {
                                dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat systemTest'}
                            }
                        }
                        */
                        
                        echo "system tests under construction"
                    }
                }
            }
        }

        stage('Publish Tests Report') {
            steps {
                junit allowEmptyResults: true, testResults: 'odsoft/exercise2/component2/cms/build/test-results/test/*.xml'
            }
        }

        stage('Publish Coverage Report') {
            steps {
                jacoco classPattern: 'odsoft/exercise2/component2/cms/build/classes', exclusionPattern: '**/*Test*.class', execPattern: 'odsoft/exercise2/component2/cms/build/jacoco/*.exec', sourceExclusionPattern: '**/*Test*.java', sourcePattern: 'odsoft/exercise2/component2/cms/src/main/java'
            }
        }
    
        stage('Deploy'){
            steps {
                /*
                script {
                    if (isUnix()) {
                        dir('odsoft/exercise2/component2/cms') {sh './gradlew deploy'}
                    } else {
                        dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat deploy'}
                    }
                }
                */
                echo "Deploy under construction"
            }
        }
    
        stage('Smoke Tests') {
            steps {
                /*
                script {
                    if (isUnix()) {
                        dir('odsoft/exercise2/component2/cms') {sh './gradlew smokeTest'}
                    } else {
                        dir('odsoft/exercise2/component2/cms') {bat 'gradlew.bat smokeTest'}
                    }
                }
                */
                echo "Smoke tests under construction"
            }
        }

        stage('Manual UI Acceptance Tests') {
            options {
                timeout(time: 1, unit: 'HOURS')
            }
            steps {

                emailext body: '''Please do some testing and approve the build on jenkins

CHOP CHOP! Get to work!''', recipientProviders: [developers(), culprits()], subject: 'Manual Tests', to: '1141233@isep.ipp.pt'

                input 'Please Approve or fail the build after UI Acceptance Tests'
            }
        }

        stage('Continuous Integration Feedback') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding',
                    credentialsId: 'a1e7ee23-40f2-46fe-82d5-048f0790e80e',
                    usernameVariable: 'GIT_USERNAME', 
                    passwordVariable: 'GIT_PASSWORD']]) {

                    script {
                        if (isUnix()) {
                            dir('odsoft/exercise2/component2/cms') {
                                sh "git tag Build#${BUILD_NUMBER}-${currentBuild.currentResult}"
                                sh "git push https://${GIT_USERNAME}:${GIT_PASSWORD}@bitbucket.org/mei-isep/odsoft-18-19-ifp-g114.git --tags"
                            }
                        } else {
                            dir('odsoft/exercise2/component2/cms') {
                                bat "git tag Build#${BUILD_NUMBER}-${currentBuild.currentResult}"
                                bat "git push https://${GIT_USERNAME}:${GIT_PASSWORD}@bitbucket.org/mei-isep/odsoft-18-19-ifp-g114.git --tags"
                            }
                        }
                    }
                }
            }
        }

    }
}